// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios12.4-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name MyTargetSDK
import AVFAudio
import AVFoundation
import AdSupport
import CoreTelephony.CTCarrier
import CoreTelephony.CTTelephonyNetworkInfo
import CoreTelephony
import Foundation
@_exported import MyTargetSDK
import SafariServices
import Security
import StoreKit
import Swift
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import os
@_hasMissingDesignatedInitializers @objc(MTRGInstreamAdVideoMotionDisclaimer) final public class InstreamAdVideoMotionDisclaimer : ObjectiveC.NSObject {
  @objc final public let text: Swift.String
  @objc deinit
}
@objc public protocol MTRGMenu {
  @objc(addMenuAction:) func add(menuAction action: MyTargetSDK.MTRGMenuAction)
  @objc(presentInViewController:sourceView:) func present(in viewController: UIKit.UIViewController, sourceView: UIKit.UIView?)
}
@objc public enum MTRGMenuActionStyle : Swift.Int {
  case `default`
  case copy
  case hide
  case complain
  case cancel
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc final public class MTRGMenuAction : ObjectiveC.NSObject {
  @objc final public let title: Swift.String
  @objc final public let style: MyTargetSDK.MTRGMenuActionStyle
  @objc final public let alias: Swift.String?
  @objc public init(title: Swift.String, style: MyTargetSDK.MTRGMenuActionStyle, alias: Swift.String? = nil, handler: (() -> Swift.Void)?)
  @objc final public func handleClick()
  @objc deinit
}
@objc public enum MTRGLogMessageType : Swift.Int {
  case info
  case warning
  case error
  case critical
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers @objc(MTRGCallToActionData) final public class CallToActionData : ObjectiveC.NSObject {
  @objc final public let icon: MyTargetSDK.MTRGImageData?
  @objc final public let buttonText: Swift.String
  @objc final public let additionalText: Swift.String?
  @objc final public let buttonColor: UIKit.UIColor?
  @objc final public let buttonTextColor: UIKit.UIColor?
  @objc deinit
}
@objc(MTRGWebForm) public protocol WebForm {
  @objc func reload()
  @objc func dismiss()
}
@objc(MTRGWebFormDelegate) public protocol WebFormDelegate {
  @objc func webFormWillPresent(_ webForm: any MyTargetSDK.WebForm)
  @objc func webFormDidDismiss(_ webForm: any MyTargetSDK.WebForm)
  @objc(webForm:showErrorViewForError:) func webForm(_ webForm: any MyTargetSDK.WebForm, showErrorViewFor error: any Swift.Error) -> UIKit.UIView?
  @objc(webForm:didCopyText:) func webForm(_ webForm: any MyTargetSDK.WebForm, didCopy text: Swift.String)
  @objc(webForm:didHandleSetViewSettings:) func webForm(_ webForm: any MyTargetSDK.WebForm, didHandle setViewSettings: MyTargetSDK.WebFormSetViewSettings)
  @available(*, deprecated, message: "Use webForm(_:didHandleGetUserInfoWith:) instead.")
  @objc(webFormDidHandleGetUserInfo:) optional func webFormDidHandleGetUserInfo(_ webForm: any MyTargetSDK.WebForm) -> MyTargetSDK.WebFormGetUserInfoResult
  @objc(webForm:didHandleGetUserInfoWithResultHandler:) optional func webForm(_ webForm: any MyTargetSDK.WebForm, didHandleGetUserInfoWith resultHandler: @escaping (MyTargetSDK.WebFormGetUserInfoResult) -> Swift.Void)
}
extension MyTargetSDK.MTRGBaseAd {
  @objc weak dynamic public var webFormDelegate: (any MyTargetSDK.WebFormDelegate)? {
    @objc get
    @objc set
  }
}
@_hasMissingDesignatedInitializers @objc(MTRGPostViewData) final public class PostViewData : ObjectiveC.NSObject {
  @objc final public let text: Swift.String?
  @objc final public let duration: Swift.Double
  @objc final public let overlayViewColor: UIKit.UIColor?
  @objc final public let backgroundImage: MyTargetSDK.MTRGImageData?
  @objc deinit
}
@objcMembers @objc(MTRGWebFormGetUserInfoResult) final public class WebFormGetUserInfoResult : ObjectiveC.NSObject {
  @objc final public let firstName: Swift.String?
  @objc final public let lastName: Swift.String?
  @objc final public let birthday: Foundation.Date?
  @objc final public let city: Swift.String?
  @objc final public let country: Swift.String?
  @objc final public let contact: MyTargetSDK.WebFormGetUserInfoResult.Contact?
  @objc public init(firstName: Swift.String? = nil, lastName: Swift.String? = nil, birthday: Foundation.Date? = nil, city: Swift.String? = nil, country: Swift.String? = nil, contact: MyTargetSDK.WebFormGetUserInfoResult.Contact? = nil)
  @objc deinit
}
extension MyTargetSDK.WebFormGetUserInfoResult {
  @objcMembers @objc(MTRGWebFormGetUserInfoResultContact) final public class Contact : ObjectiveC.NSObject {
    @objc final public let phone: Swift.String?
    @objc final public let phoneSign: Swift.String?
    @objc final public let email: Swift.String?
    @objc final public let emailSign: Swift.String?
    @objc final public let decodingParameters: MyTargetSDK.WebFormGetUserInfoResult.DecodingParameters?
    @objc public init(phone: Swift.String? = nil, email: Swift.String? = nil)
    @objc public init(maskedPhone: Swift.String, maskedPhoneSign: Swift.String, decodingParameters: MyTargetSDK.WebFormGetUserInfoResult.DecodingParameters)
    @objc public init(maskedEmail: Swift.String, maskedEmailSign: Swift.String, decodingParameters: MyTargetSDK.WebFormGetUserInfoResult.DecodingParameters)
    @objc public init(maskedPhone: Swift.String, maskedPhoneSign: Swift.String, maskedEmail: Swift.String, maskedEmailSign: Swift.String, decodingParameters: MyTargetSDK.WebFormGetUserInfoResult.DecodingParameters)
    @objc deinit
  }
  @objcMembers @objc(MTRGWebFormGetUserInfoResultDecodingParameters) final public class DecodingParameters : ObjectiveC.NSObject {
    @objc final public let accessToken: Swift.String?
    @objc final public let userID: Swift.String?
    @objc final public let appID: Swift.String
    @objc public init(accessToken: Swift.String? = nil, userID: Swift.String? = nil, appID: Swift.String)
    @objc deinit
  }
}
@_hasMissingDesignatedInitializers @objc(MTRGBannerMediaRecovery) final public class BannerMediaRecovery : ObjectiveC.NSObject {
  @objc override final public var description: Swift.String {
    @objc get
  }
  @objc public static var skip: MyTargetSDK.BannerMediaRecovery {
    @objc get
  }
  @objc public static func retry(maxRetryCount: Swift.Int) -> MyTargetSDK.BannerMediaRecovery
  @objc deinit
}
@objcMembers @objc(MTRGWebFormSetViewSettings) final public class WebFormSetViewSettings : ObjectiveC.NSObject {
  @objc final public let statusBarStyle: MyTargetSDK.WebFormStatusBarStyle
  @objc final public let actionBarColor: UIKit.UIColor?
  @objc final public let navigationBarColor: UIKit.UIColor?
  @objc public init(statusBarStyle: MyTargetSDK.WebFormStatusBarStyle, actionBarColor: UIKit.UIColor?, navigationBarColor: UIKit.UIColor?)
  @objc deinit
}
@objc(MTRGWebFormStatusBarStyle) public enum WebFormStatusBarStyle : Swift.Int {
  case light
  case dark
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers @objc(MTRGInstreamAdVideoMotionHeader) final public class InstreamAdVideoMotionHeader : ObjectiveC.NSObject {
  @objc final public let icon: Foundation.URL
  @objc final public let title: Swift.String
  @objc final public let linkText: Swift.String
  @objc final public let ageRestrictionText: Swift.String
  @objc final public let adDisclaimerText: Swift.String
  @objc deinit
}
@objc public protocol MTRGMenuFactory {
  @objc func menu() -> any MyTargetSDK.MTRGMenu
}
@objc public protocol MTRGLogger {
  @objc func logMessage(_ message: Swift.String, type: MyTargetSDK.MTRGLogMessageType)
}
@_inheritsConvenienceInitializers @objc final public class MTRGManager : ObjectiveC.NSObject {
  @objc public static var sdkConfig: MyTargetSDK.MTRGConfig {
    @objc get
    @objc set
  }
  @objc public static var isAudioSessionManagedByApplication: Swift.Bool {
    @objc get
    @objc set
  }
  @objc public static var customLogger: (any MyTargetSDK.MTRGLogger)? {
    @objc get
    @objc set
  }
  @objc public static func initSdk()
  @objc public static func setDebugMode(_ enabled: Swift.Bool)
  @objc public static func getBidderToken() -> Swift.String
  @objc override dynamic public init()
  @objc deinit
}
@objc(MTRGDisclaimer) final public class Disclaimer : ObjectiveC.NSObject {
  @objc final public let text: Swift.String
  @objc final public let type: MyTargetSDK.DisclaimerType
  @objc public init(text: Swift.String, type: MyTargetSDK.DisclaimerType)
  @objc deinit
}
@objc(MTRGInstreamAdPostViewPlayer) public protocol InstreamAdPostViewPlayer {
  @objc func show(postViewData: MyTargetSDK.PostViewData)
  @objc func update(progress: Foundation.TimeInterval, duration: Foundation.TimeInterval)
  @objc func hide()
}
@_hasMissingDesignatedInitializers @objc(MTRGShoppableAdsItem) final public class ShoppableAdsItem : ObjectiveC.NSObject, Swift.Decodable {
  @objc final public let url: Swift.String
  @objc final public let id: Swift.String
  @objc final public let price: Swift.String?
  @objc final public let oldPrice: Swift.String?
  @objc final public let picture: Swift.String
  @objc final public let text: Swift.String
  @objc deinit
  public init(from decoder: any Swift.Decoder) throws
}
extension MyTargetSDK.MTRGCachePolicy : Swift.Encodable {
}
@objc(MTRGInstreamAdVideoMotionPlayerDelegate) public protocol InstreamAdVideoMotionPlayerDelegate {
  @objc func onBannerShow()
  @objc func onBannerComplete()
  @objc func onItemShow(_ itemId: Swift.String)
  @objc func onItemClick(_ itemId: Swift.String)
  @objc func onHeaderClick()
  @objc func onCloseByUser()
  @objc func onError(_ error: Swift.String)
}
@objc(MTRGInstreamAdVideoMotionPlayer) public protocol InstreamAdVideoMotionPlayer {
  @objc weak var delegate: (any MyTargetSDK.InstreamAdVideoMotionPlayerDelegate)? { get set }
  @objc func play(_ videoMotionBanner: MyTargetSDK.InstreamAdVideoMotionBanner)
}
@_hasMissingDesignatedInitializers @objc(MTRGNativePromoCollageImage) final public class NativePromoCollageImage : ObjectiveC.NSObject {
  @objc final public let imageData: MyTargetSDK.MTRGImageData
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc(MTRGNativePromoCollageVideo) final public class NativePromoCollageVideo : ObjectiveC.NSObject {
  @objc final public let preview: MyTargetSDK.MTRGImageData?
  @objc final public let duration: Foundation.TimeInterval
  @objc final public let video: MyTargetSDK.MTRGVideoData?
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc(MTRGNativePromoCollageMedia) final public class NativePromoCollageMedia : ObjectiveC.NSObject {
  public enum MediaType {
    case image(MyTargetSDK.NativePromoCollageImage)
    case video(MyTargetSDK.NativePromoCollageVideo)
  }
  final public let media: MyTargetSDK.NativePromoCollageMedia.MediaType
  @objc final public var isVideo: Swift.Bool {
    @objc get
  }
  @objc final public func getVideo() -> MyTargetSDK.NativePromoCollageVideo?
  @objc final public func getImage() -> MyTargetSDK.NativePromoCollageImage?
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc(MTRGNativePromoCollage) final public class NativePromoCollage : ObjectiveC.NSObject {
  @objc final public let collageMedia: [MyTargetSDK.NativePromoCollageMedia]
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers final public class MTRGVersion : ObjectiveC.NSObject {
  @objc final public class func currentVersion() -> Swift.String
  @objc deinit
}
@objc(MTRGAdLoadingError) public enum AdLoadingError : Swift.Int, Foundation.LocalizedError {
  case undefinedNetworkError = 1000
  case invalidUrl = 1001
  case networkFailed = 1002
  case requestTimeout = 1003
  case forbidden = 1403
  case notFound = 1404
  case internalServerError = 1500
  case undefinedParseError = 2000
  case emptyResponse = 2001
  case invalidJson = 2002
  case invalidXml = 2003
  case invalidAdType = 2004
  case requiredFieldMissed = 2005
  case undefinedDataError = 3000
  case missedImages = 3001
  case missedHtml = 3002
  case noBanners = 3003
  case invalidBannerType = 3004
  case reloadingNotAllowed = 4001
  case loadingCancelled = 4002
  case undefinedSubmodelLoadingError = 4003
  case undefinedMediationError = 5000
  case mediationAdNotLoaded = 5001
  public var errorDescription: Swift.String? {
    get
  }
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public static var _nsErrorDomain: Swift.String {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers @objc(MTRGInstreamAdVideoMotionData) final public class InstreamAdVideoMotionData : ObjectiveC.NSObject {
  @objc final public let header: MyTargetSDK.InstreamAdVideoMotionHeader
  @objc final public let items: [MyTargetSDK.InstreamAdVideoMotionItem]
  @objc final public let disclaimer: MyTargetSDK.InstreamAdVideoMotionDisclaimer?
  @objc deinit
}
extension MyTargetSDK.MTRGCachePolicy : Swift.Hashable {
}
@objc(MTRGDisclaimerType) public enum DisclaimerType : Swift.Int {
  case undefined = 0
  case alcohol = 3
  case beer = 4
  case tobacco = 5
  case medical = 6
  case drugs = 8
  case dietary = 9
  case declaration = 10
  case credits = 11
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers @objc(MTRGInstreamAdVideoMotionItem) final public class InstreamAdVideoMotionItem : ObjectiveC.NSObject {
  @objc final public let id: Swift.String
  @objc final public let price: Swift.String?
  @objc final public let oldPrice: Swift.String?
  @objc final public let currency: Swift.String
  @objc final public let image: Foundation.URL
  @objc final public let text: Swift.String
  @objc final public let ctaText: Swift.String
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc(MTRGInstreamAdVideoMotionBanner) final public class InstreamAdVideoMotionBanner : ObjectiveC.NSObject {
  @objc final public let videoMotionData: MyTargetSDK.InstreamAdVideoMotionData
  @objc final public let allowClose: Swift.Bool
  @objc final public let allowCloseDelay: Foundation.NSNumber?
  @objc final public let duration: Swift.Float
  @objc final public let adChoicesImage: UIKit.UIImage?
  @objc final public let hasAdChoices: Swift.Bool
  @objc deinit
}
extension MyTargetSDK.MTRGMenuActionStyle : Swift.Equatable {}
extension MyTargetSDK.MTRGMenuActionStyle : Swift.Hashable {}
extension MyTargetSDK.MTRGMenuActionStyle : Swift.RawRepresentable {}
extension MyTargetSDK.MTRGLogMessageType : Swift.Equatable {}
extension MyTargetSDK.MTRGLogMessageType : Swift.Hashable {}
extension MyTargetSDK.MTRGLogMessageType : Swift.RawRepresentable {}
extension MyTargetSDK.WebFormStatusBarStyle : Swift.Equatable {}
extension MyTargetSDK.WebFormStatusBarStyle : Swift.Hashable {}
extension MyTargetSDK.WebFormStatusBarStyle : Swift.RawRepresentable {}
extension MyTargetSDK.AdLoadingError : Swift.Equatable {}
extension MyTargetSDK.AdLoadingError : Swift.Hashable {}
extension MyTargetSDK.AdLoadingError : Swift.RawRepresentable {}
extension MyTargetSDK.DisclaimerType : Swift.Equatable {}
extension MyTargetSDK.DisclaimerType : Swift.Hashable {}
extension MyTargetSDK.DisclaimerType : Swift.RawRepresentable {}
